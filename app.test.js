var request = require('supertest')
  , spawn = require('child_process').spawn
  , assert = require('assert')

before(function (done) {
  var touch = spawn('touch', ['test'])
  touch.on('close', function (err) {
    if (err) {
      return console.log(err)
    }
    done()
  })
})

after(function (done) {
  var rm = spawn('rm', ['-rf', 'test'])

  rm.on('close', function (err) {
    if (err) {
      return console.log(err)
    }
    done()
  })
})

function postFile(done) {
  var curl = spawn('curl', ['-X', 'POST', '-F', 'foo=@test', 'http://localhost:9001/test'])
  curl.on('close', done)
}

function countTmpDir(done) {
  var ls = spawn('ls', [require('os').tmpDir()])
    , noOfFiles = 0

  ls.stdout.on('data', function (data) { noOfFiles += data.toString().split('\n').length })
  ls.on('close', function () { done(null, noOfFiles) })
}

describe('app with bodyParser', function(){

  it('will add a tmp file to the tmp dir', function(done) {
    var app = require('./broken-app.js')
      , server = app.listen(9001)

    countTmpDir(function (err, startNoOfFiles) {
      postFile(function () {
        countTmpDir(function (err, endNoOfFiles) {
          assert.equal(startNoOfFiles + 1, endNoOfFiles)
          server.close()
          done()
        })
      })
    })
  })

  it('will remove tmp file with cleanup middleware', function (done) {
    var app = require('./fixed-app.js')
      , server = app.listen(9001)

    countTmpDir(function (err, startNoOfFiles) {
      postFile(function () {
        countTmpDir(function (err, endNoOfFiles) {
          assert.equal(startNoOfFiles, endNoOfFiles)
          server.close()
          done()
        })
      })
    })
  })

})
